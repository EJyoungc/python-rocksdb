name: Build Windows Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build Wheel
    runs-on: windows-latest
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,defaults
        channel-priority: strict

    - name: Add retry script
      run: |
        if [ ! -d "scripts" ]; then
          mkdir scripts
        fi
        echo '#!/bin/bash' > scripts/retry.sh
        echo '' >> scripts/retry.sh
        echo 'COMMAND=$1' >> scripts/retry.sh
        echo 'MAX_RETRIES=${2:-3}' >> scripts/retry.sh
        echo 'SLEEP_TIME=${3:-5}' >> scripts/retry.sh
        echo '' >> scripts/retry.sh
        echo 'for ((i=1; i<=MAX_RETRIES; i++)); do' >> scripts/retry.sh
        echo '    eval "$COMMAND" && break || {' >> scripts/retry.sh
        echo '        if [[ $i -lt MAX_RETRIES ]]; then' >> scripts/retry.sh
        echo '            echo "Command failed. Retrying in $SLEEP_TIME seconds..."' >> scripts/retry.sh
        echo '            sleep $SLEEP_TIME;' >> scripts/retry.sh
        echo '        else' >> scripts/retry.sh
        echo '            echo "Command failed after $i attempts."' >> scripts/retry.sh
        echo '            exit 1;' >> scripts/retry.sh
        echo '        fi' >> scripts/retry.sh
        echo '    }' >> scripts/retry.sh
        echo 'done' >> scripts/retry.sh
        chmod +x scripts/retry.sh

    - name: Install Conda dependencies
      shell: bash
      run: ./scripts/retry.sh "conda install -y rocksdb cython setuptools wheel libpython m2w64-toolchain" 3 10

    - name: Verify RocksDB installation
      shell: bash
      run: ./scripts/retry.sh "dir %CONDA_PREFIX%/Library/include/rocksdb && dir %CONDA_PREFIX%/Library/lib/rocksdb.lib" 3 10

    - name: Build wheel
      shell: bash
      env:
        INCLUDE: "%CONDA_PREFIX%/Library/include;%INCLUDE%"
        LIB: "%CONDA_PREFIX%/Library/lib;%LIB%"
        CFLAGS: "-I%CONDA_PREFIX%/Library/include /D_WIN32_WINNT=0x0601"
        CXXFLAGS: "-I%CONDA_PREFIX%/Library/include /EHsc /D_WIN32_WINNT=0x0601"
      run: |
        ./scripts/retry.sh "conda run -n build-env python setup.py build_ext --inplace" 3 10
        ./scripts/retry.sh "conda run -n build-env python setup.py bdist_wheel" 3 10

    - name: Repair wheel (if needed)
      shell: bash
      run: |
        ./scripts/retry.sh "pip install delvewheel" 3 10
        ./scripts/retry.sh "delvewheel repair dist/*.whl --add-path %CONDA_PREFIX%/Library/bin" 3 10

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rocksdb-wheels
        path: |
          dist/*.whl
          wheelhouse/*.whl
        retention-days: 3
