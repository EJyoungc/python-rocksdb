name: Build Windows Wheels

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_wheels:
    name: Build Wheel
    runs-on: windows-latest
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,defaults
        channel-priority: strict
        auto-activate-base: false

    - name: Install Conda dependencies (with retry)
      shell: cmd /C CALL
      retries: 2
      continue-on-error: false
      run: |
        conda create -n build-env -y python=${{ matrix.python-version }} || exit 1
        conda install -n build-env -y --strict-channel-priority ^
            rocksdb cython setuptools wheel libpython m2w64-toolchain || exit 1

    - name: Build wheel (with retry)
      shell: cmd /C CALL
      retries: 2
      env:
        INCLUDE: "%CONDA_PREFIX%\\Library\\include;%INCLUDE%"
        LIB: "%CONDA_PREFIX%\\Library\\lib;%LIB%"
        CFLAGS: "-I%CONDA_PREFIX%\\Library\\include /D_WIN32_WINNT=0x0601"
        CXXFLAGS: "-I%CONDA_PREFIX%\\Library\\include /EHsc /D_WIN32_WINNT=0x0601"
      run: |
        conda run -n build-env --no-capture-output python setup.py build_ext --inplace || exit 1
        conda run -n build-env --no-capture-output python setup.py bdist_wheel || exit 1

    - name: Repair wheel
      shell: cmd /C CALL
      run: |
        conda run -n build-env --no-capture-output pip install -q delvewheel
        conda run -n build-env --no-capture-output delvewheel repair ^
          dist/*.whl --add-path "%CONDA_PREFIX%\\Library\\bin"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rocksdb-wheels
        path: |
          dist/*.whl
          wheelhouse/*.whl
        retention-days: 3
