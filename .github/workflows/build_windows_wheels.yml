name: Build Windows Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build Wheel
    runs-on: windows-latest
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: 
          - "3.8"
          # - "3.9"
          # - "3.10"
          # - "3.11"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,defaults
        channel-priority: strict

    - name: Create and activate conda environment
      shell: bash
      run: |
        conda create -n build-env python=${{ matrix.python-version }} -y
        echo "source activate build-env" >> $GITHUB_ENV
        source $GITHUB_ENV

    - name: Install Conda dependencies
      shell: bash
      run: |
        for ((i=1; i<=3; i++)); do
          conda install -y rocksdb cython setuptools wheel libpython m2w64-toolchain && break || {
            if [[ $i -lt 3 ]]; then
              echo "Command failed. Retrying in 10 seconds..."
              sleep 10;
            else
              echo "Command failed after $i attempts."
              exit 1;
            fi
          }
        done

    - name: Verify RocksDB installation
      shell: bash
      run: |
        for ((i=1; i<=3; i++)); do
          dir %CONDA_PREFIX%/Library/include/rocksdb && dir %CONDA_PREFIX%/Library/lib/rocksdb.lib && break || {
            if [[ $i -lt 3 ]]; then
              echo "Command failed. Retrying in 10 seconds..."
              sleep 10;
            else
              echo "Command failed after $i attempts."
              exit 1;
            fi
          }
        done

    - name: Build wheel
      shell: bash
      env:
        INCLUDE: "%CONDA_PREFIX%/Library/include;%INCLUDE%"
        LIB: "%CONDA_PREFIX%/Library/lib;%LIB%"
        CFLAGS: "-I%CONDA_PREFIX%/Library/include /D_WIN32_WINNT=0x0601"
        CXXFLAGS: "-I%CONDA_PREFIX%/Library/include /EHsc /D_WIN32_WINNT=0x0601"
      run: |
        for ((i=1; i<=3; i++)); do
          conda run -n build-env python setup.py build_ext --inplace && break || {
            if [[ $i -lt 3 ]]; then
              echo "Command failed. Retrying in 10 seconds..."
              sleep 10;
            else
              echo "Command failed after $i attempts."
              exit 1;
            fi
          }
        done
        for ((i=1; i<=3; i++)); do
          conda run -n build-env python setup.py bdist_wheel && break || {
            if [[ $i -lt 3 ]]; then
              echo "Command failed. Retrying in 10 seconds..."
              sleep 10;
            else
              echo "Command failed after $i attempts."
              exit 1;
            fi
          }
        done

    - name: Repair wheel (if needed)
      shell: bash
      run: |
        for ((i=1; i<=3; i++)); do
          pip install delvewheel && break || {
            if [[ $i -lt 3 ]]; then
              echo "Command failed. Retrying in 10 seconds..."
              sleep 10;
            else
              echo "Command failed after $i attempts."
              exit 1;
            fi
          }
        done
        for ((i=1; i<=3; i++)); do
          delvewheel repair dist/*.whl --add-path %CONDA_PREFIX%/Library/bin && break || {
            if [[ $i -lt 3 ]]; then
              echo "Command failed. Retrying in 10 seconds..."
              sleep 10;
            else
              echo "Command failed after $i attempts."
              exit 1;
            fi
          }
        done

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rocksdb-wheels
        path: |
          dist/*.whl
          wheelhouse/*.whl
        retention-days: 3
